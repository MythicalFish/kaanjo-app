- state = i == 0 ? 'tab-active' : ''
- enabled = scenario.enabled? ? '' : 'scenario-disabled'
- classname = "#{state} #{enabled}"
- show_uploader = f.object.model_name.name == 'CampaignTemplate' ? false : true

.scenario-selector.tab.py2{data:{position:i},class:classname}

  .emoticon
    .emoticon-img
      %img{src:scenario.try(:image_url)}
    %label= scenario.try(:label)

- content_for :emoticon_form do
  .tab-content.scenario-form{data:{position:i},class:"#{state} #{enabled}"} 

    = f.fields_for :scenarios, scenario do |ff|
      
      = ff.hidden_field :id
      = ff.hidden_field :campaign_id
      = ff.hidden_field :enabled, class: 'scenario_enabled'
      = ff.hidden_field :emoticon_id, class: 'scenario_emoticon-id'

      .mb3
        .flex.justify-between.mb2
          = ff.label :emoticon, class: 'h3'       
          %a{href:'http://emojione.com',target:'_blank'}
            %i.fa.fa-search.mr1
            Find emoticons on EmojiOne

        .mb2
          - if show_uploader
            .inline-block.relative.mr2
              .btn
                %i.fa.fa-upload.mr1
                Upload emoticon
              = ff.file_field :custom_emoticon, class: 'custom_emoticon absolute top-0 left-0 right-0 bottom-0 opa0'

          %button.btn{type:'button',onclick:"app.emoticon.library(#{i});"}
            %i.fa.fa-th.mr1
            Select emoticon
            
        - if show_uploader
          .opa8
            SVG images are ideal, otherwise PNG or JPG at least 48px by 48px. 
        
        
      
      .mb3
        = ff.label :label, class: 'h3'
        = ff.text_field :label, class: 'scenario_label', maxlength: 15
      
      .mb3
        = ff.label :message, class: 'h3'
        = ff.text_field :message, class: 'scenario_message', maxlength: 120
      
      %button.btn{type:'button',onclick:"app.scenario.disable(#{i});"}
        %i.fa.fa-close.mr2
        Remove scenario